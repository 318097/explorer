{"version":3,"sources":["store/utils.js","components/TitleBar.js","store/actions.js","store/constants.js","components/folder/Dropdown.js","components/folder/Folder.js","components/folder/FolderList.js","components/todos/Todo.js","components/todos/TodoList.js","components/Window.js","components/layouts/Header.js","App.js","serviceWorker.js","store/reducer.js","store/index.js","index.js"],"names":["generatePath","fileList","fileInfo","absolutePath","currentFile","push","name","id","parent","reverse","addItem","rootStructure","parentId","itemType","uuid","children","type","undefined","status","deleteItem","fileId","currentNode","parentNodeId","parentNode","filter","nodesToDelete","recursiveSearch","fileIds","forEach","file","length","CustomLink","styled","span","TitleBar","navigate","path","className","Item","onClick","map","item","key","data","payload","updateItem","DropdownIcon","Icon","DropdownContent","div","Dropdown","renameFolder","handleDelete","useState","showDropdown","setShowDropdown","event","stopPropagation","prevState","title","onConfirm","placement","okText","cancelText","Wrapper","Folder","renameFolderStatus","setRenameFolderStatus","setName","value","autoFocus","onChange","target","onKeyUp","keyCode","which","slice","parseFileName","CreateFolderWrapper","mapDispatchToProps","connect","files","inputBoxVisibility","setInputBoxVisibility","folderName","setFolderName","createNewFolder","trim","size","placeholder","onPressEnter","prev","TodoWrapper","TodoList","todo","editTodoStatus","setEditTodoStatus","setTitle","prop","CreateTodoWrapper","todos","createNewTodo","Todo","getPath","params","setPath","ownProps","pathContent","Object","keys","findFilesInPath","match","history","useEffect","style","margin","Header","App","basename","exact","component","Window","render","to","Boolean","window","location","hostname","initialState","test","test2","child1","child2","reducer","state","action","fileHierarchy","updatedRootStructure","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b9bfc34.chunk.js","sourcesContent":["import uuid from \"uuid/v1\";\n\nconst findFilesInPath = (fileList = {}, fileInfo) => {\n  let files = [],\n    todos = [];\n  if (!fileInfo) {\n    Object.keys(fileList).forEach(id => {\n      const file = fileList[id];\n      if (!file.parent) {\n        if (file.type === \"todos\") todos.push({ ...file, id });\n        else files.push({ ...file, id });\n      }\n    });\n  } else {\n    fileInfo.children.forEach(fileId => {\n      const file = fileList[fileId];\n      if (file.type === \"todos\") todos.push({ ...file, id: fileId });\n      else files.push({ ...file, id: fileId });\n    });\n  }\n  return { files, todos };\n};\n\nconst generatePath = (fileList, fileInfo) => {\n  const absolutePath = [];\n\n  let currentFile = fileInfo;\n  while (currentFile) {\n    absolutePath.push({ name: currentFile.name, id: currentFile.id });\n    const id = currentFile.parent;\n    currentFile = fileList[id];\n    if (currentFile) currentFile.id = id;\n  }\n  const path = absolutePath.reverse();\n  return path;\n};\n\nconst addItem = ({ parentId, itemType, name }, rootStructure) => {\n  const id = uuid();\n  if (parentId) rootStructure[parentId].children.push(id);\n\n  rootStructure[id] = {\n    name,\n    type: itemType,\n    parent: parentId,\n    children: itemType === \"folder\" ? [] : undefined,\n    status: itemType === \"todos\" ? \"none\" : undefined\n  };\n  return rootStructure;\n};\n\nconst deleteItem = (fileId, rootStructure) => {\n  const currentNode = rootStructure[fileId];\n\n  const parentNodeId = currentNode.parent;\n  const parentNode = rootStructure[parentNodeId];\n  if (parentNodeId) {\n    // if not root level\n    parentNode.children = parentNode.children.filter(id => id !== fileId);\n    rootStructure[parentNodeId] = { ...parentNode };\n  }\n\n  const nodesToDelete = [fileId];\n\n  if (currentNode.type === \"folder\") {\n    const recursiveSearch = (fileIds = []) => {\n      nodesToDelete.push(...fileIds);\n      fileIds.forEach(fileId => {\n        const file = rootStructure[fileId];\n        if (file && file.children && file.children.length > 0) {\n          recursiveSearch(file.children);\n        }\n      });\n    };\n    recursiveSearch(currentNode.children);\n  }\n\n  nodesToDelete.forEach(id => delete rootStructure[id]);\n  return rootStructure;\n};\n\nexport { findFilesInPath, generatePath, addItem, deleteItem };\n","import React from \"react\";\nimport { Breadcrumb, Icon } from \"antd\";\nimport styled from \"styled-components\";\n\nconst CustomLink = styled.span`\n  transition: 0.5s;\n  cursor: pointer;\n  &:hover {\n    color: #337cca;\n  }\n`;\n\nconst TitleBar = ({ navigate, path = [] }) => {\n  return (\n    <div className=\"title-bar\">\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <CustomLink onClick={navigate()}>\n            <Icon type=\"home\" /> <span>Home</span>\n          </CustomLink>\n        </Breadcrumb.Item>\n        {path.map(item => (\n          <Breadcrumb.Item key={item.id}>\n            <CustomLink onClick={navigate(item.id)}>{item.name}</CustomLink>\n          </Breadcrumb.Item>\n        ))}\n      </Breadcrumb>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","import * as constants from \"./constants\";\n\nconst setPath = path => ({ type: constants.SET_PATH, payload: path });\n\nconst addItem = data => ({ type: constants.ADD_ITEM, payload: data });\n\nconst updateItem = data => ({ type: constants.UPDATE_ITEM, payload: data });\n\nconst deleteItem = fileId => ({ type: constants.DELETE_ITEM, payload: fileId });\n\nexport { setPath, addItem, updateItem, deleteItem };\n","const SET_PATH = \"SET_PATH\";\nconst ADD_ITEM = \"ADD_ITEM\";\nconst UPDATE_ITEM = \"UPDATE_ITEM\";\nconst DELETE_ITEM = \"DELETE_ITEM\";\n\nexport { SET_PATH, ADD_ITEM, UPDATE_ITEM, DELETE_ITEM };\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon, Popconfirm } from \"antd\";\n\nconst DropdownIcon = styled(Icon)`\n  right: -2px;\n  top: 2px;\n  position: absolute;\n  font-size: 0.8rem;\n  z-index: 1;\n`;\n\nconst DropdownContent = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    position: absolute;\n    background: #e8e8e8;\n    padding: 2px 10px;\n    right: 0;\n    left: 0;\n    top: 0;\n    & > * {\n      margin: 1px;\n    }\n  }\n`;\n\nconst Dropdown = ({ renameFolder, handleDelete }) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const handleRename = () => {\n    setShowDropdown(false);\n    renameFolder();\n  };\n\n  const handleDeleteConfirm = () => {\n    handleDelete();\n    setShowDropdown(false);\n  };\n\n  const handleDropdownClick = event => {\n    event.stopPropagation();\n    setShowDropdown(prevState => !prevState);\n  };\n\n  return (\n    <Fragment>\n      <DropdownIcon type=\"more\" onClick={handleDropdownClick} />\n      {showDropdown && (\n        <DropdownContent onClick={event => event.stopPropagation()}>\n          <Icon onClick={handleRename} type=\"edit\" />\n          <Popconfirm\n            title=\"Delete?\"\n            onConfirm={handleDeleteConfirm}\n            placement=\"right\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Icon type=\"delete\" />\n          </Popconfirm>\n        </DropdownContent>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"antd\";\n\nimport Dropdown from \"./Dropdown\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #ccc;\n  height: 60px;\n  width: 60px;\n  padding: 1px 0;\n  display: inline-block;\n  margin: 2px;\n  cursor: pointer;\n  transition: all 0.5s;\n  position: relative;\n  &:hover {\n    background: lightgrey;\n  }\n  .icon-wrapper {\n    text-align: center;\n    flex: 1 1 auto;\n    .icon {\n      font-size: 2.2rem;\n    }\n  }\n  .filename {\n    padding: 0 2px;\n    text-align: center;\n    position: relative;\n    word-break: break-all;\n    font-size: 0.8rem;\n  }\n  .rename-folder-input {\n    padding: 2px;\n    margin: 0;\n    background: #f1f1f1;\n    border: none;\n    width: 100%;\n    font-size: 0.8rem;\n  }\n`;\n\nconst parseFileName = name =>\n  name.length > 8 ? name.slice(0, 8) + \"..\" : name;\n\nconst Folder = ({ file, navigate, updateItem, deleteItem }) => {\n  const [renameFolderStatus, setRenameFolderStatus] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const renameFolder = () => {\n    setName(file.name);\n    setRenameFolderStatus(true);\n  };\n\n  const handleRename = ({ which: keyCode }) => {\n    if (keyCode === 13) {\n      updateItem({ fileId: file.id, key: \"name\", value: name });\n      setName(\"\");\n      setRenameFolderStatus(false);\n    } else if (keyCode === 27) {\n      setName(\"\");\n      setRenameFolderStatus(false);\n    }\n  };\n\n  const handleDelete = () => deleteItem(file.id);\n\n  return (\n    <Wrapper onClick={navigate(file.id)}>\n      <div className=\"icon-wrapper\">\n        <Icon className=\"icon\" type=\"folder\" />\n      </div>\n      {renameFolderStatus ? (\n        <input\n          className=\"rename-folder-input\"\n          type=\"text\"\n          value={name}\n          autoFocus\n          onClick={event => event.stopPropagation()}\n          onChange={({ target: { value } }) => setName(value)}\n          onKeyUp={handleRename}\n        />\n      ) : (\n        <div className=\"filename\">{parseFileName(file.name)}</div>\n      )}\n      <Dropdown handleDelete={handleDelete} renameFolder={renameFolder} />\n    </Wrapper>\n  );\n};\n\nexport default Folder;\n","import React, { useState, Fragment } from \"react\";\nimport { Icon, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nimport { addItem, updateItem, deleteItem } from \"../../store/actions\";\nimport Folder from \"./Folder\";\n\nconst CreateFolderWrapper = styled.div`\n  display: flex;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  align-items: center;\n  justify-content: flex-end;\n  button,\n  input {\n    font-size: 0.7rem;\n    margin: 0 2px;\n  }\n  .container {\n    display: flex;\n    align-items: center;\n    background: lightgrey;\n    padding: 5px 10px;\n    input {\n      width: 100px;\n    }\n  }\n`;\n\nconst FolderList = ({\n  navigate,\n  files = [],\n  path,\n  addItem,\n  updateItem,\n  deleteItem\n}) => {\n  const [inputBoxVisibility, setInputBoxVisibility] = useState(false);\n  const [folderName, setFolderName] = useState(\"\");\n\n  const createNewFolder = () => {\n    const name = folderName.trim() || \"New Folder\";\n    addItem({\n      itemType: \"folder\",\n      name: name,\n      parentId: path.length && path[path.length - 1][\"id\"]\n    });\n    setInputBoxVisibility(false);\n    setFolderName(\"\");\n  };\n\n  return (\n    <Fragment>\n      <div className=\"folder-list\">\n        {files.length > 0 ? (\n          files.map(file => (\n            <Folder\n              updateItem={updateItem}\n              deleteItem={deleteItem}\n              key={file.id}\n              navigate={navigate}\n              file={file}\n            />\n          ))\n        ) : (\n          <p className=\"empty-message\">Empty folder</p>\n        )}\n\n        <CreateFolderWrapper>\n          {inputBoxVisibility ? (\n            <div className=\"container\">\n              <Input\n                size=\"small\"\n                value={folderName}\n                autoFocus\n                placeholder=\"Folder Name\"\n                onChange={({ target: { value } }) => setFolderName(value)}\n                onPressEnter={createNewFolder}\n              />\n              <Button size=\"small\" onClick={() => setInputBoxVisibility(false)}>\n                Cancel\n              </Button>\n              <Button size=\"small\" onClick={createNewFolder}>\n                Create\n              </Button>\n            </div>\n          ) : (\n            <Button\n              size=\"small\"\n              onClick={() => setInputBoxVisibility(prev => !prev)}\n            >\n              New Folder\n              <Icon type=\"folder-add\" />\n            </Button>\n          )}\n        </CreateFolderWrapper>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  addItem,\n  updateItem,\n  deleteItem\n};\n\nexport default connect(null, mapDispatchToProps)(FolderList);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon, Divider, Popconfirm } from \"antd\";\n\nconst TodoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  border: 1px solid lightgrey;\n  margin: 3px;\n  padding: 0;\n  position: relative;\n  &:before {\n    content: \"\";\n    display: block;\n    height: 100%;\n    width: 5px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: ${({ status }) => (status === \"done\" ? \"green\" : \"lightgrey\")};\n  }\n  .name {\n    padding: 3px 10px;\n    flex: 1 1 auto;\n  }\n  .status {\n    padding: 0 1px;\n    background: #ececec;\n    & > * {\n      margin: 2px;\n    }\n    .anticon {\n      transition: 0.5s;\n      border-radius: 50%;\n      padding: 4px;\n      &:hover {\n        background: lightgrey;\n      }\n    }\n  }\n  .edit-todo-input {\n    padding-left: 5px;\n    flex: 1 1 auto;\n    z-index: 1;\n    margin: 0;\n    background: #f1f1f1;\n    border: none;\n    font-size: 0.8rem;\n  }\n`;\n\nconst TodoList = ({ todo: { name, status, id }, updateItem, deleteItem }) => {\n  const [editTodoStatus, setEditTodoStatus] = useState(false);\n  const [title, setTitle] = useState(\"\");\n\n  const updateTodoStatus = () =>\n    updateItem({ fileId: id, key: \"status\", value: \"done\" });\n\n  const updateTodoName = ({ which: keyCode }) => {\n    if (keyCode === 13) {\n      updateItem({ fileId: id, key: \"name\", value: title });\n      setTitle(\"\");\n      setEditTodoStatus(false);\n    } else if (keyCode === 27) {\n      setTitle(\"\");\n      setEditTodoStatus(false);\n    }\n  };\n\n  const handleDelete = () => deleteItem(id);\n\n  return (\n    <TodoWrapper status={status}>\n      {editTodoStatus ? (\n        <input\n          className=\"edit-todo-input\"\n          type=\"text\"\n          autoFocus\n          value={title}\n          onClick={event => event.stopPropagation()}\n          onChange={({ target: { value } }) => setTitle(value)}\n          onKeyUp={updateTodoName}\n        />\n      ) : (\n        <span className=\"name\">{name}</span>\n      )}\n      <div className=\"status\">\n        <Icon\n          type=\"edit\"\n          onClick={() => (setEditTodoStatus(prop => !prop), setTitle(name))}\n        />\n        <Popconfirm\n          title=\"Delete?\"\n          onConfirm={handleDelete}\n          placement=\"right\"\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Icon type=\"delete\" />\n        </Popconfirm>\n        <Divider type=\"vertical\" />\n        <Icon type=\"check\" onClick={updateTodoStatus} />\n      </div>\n    </TodoWrapper>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport { addItem, updateItem, deleteItem } from \"../../store/actions\";\nimport Todo from \"./Todo\";\n\nconst CreateTodoWrapper = styled.div`\n  text-align: center;\n  margin: 10px auto;\n  button,\n  input {\n    font-size: 0.7rem;\n    margin: 2px;\n  }\n  .container {\n    width: 300px;\n    margin: 2px auto;\n  }\n`;\n\nconst TodoList = ({ todos = [], path, addItem, updateItem, deleteItem }) => {\n  const [inputBoxVisibility, setInputBoxVisibility] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const createNewTodo = () => {\n    if (!name.trim()) return;\n    addItem({\n      name,\n      itemType: \"todos\",\n      parentId: (path.length && path[path.length - 1][\"id\"]) || null\n    });\n    setInputBoxVisibility(false);\n    setName(\"\");\n  };\n\n  return (\n    <div className=\"todo-list\">\n      {todos.length > 0 ? (\n        todos.map(todo => (\n          <Todo\n            updateItem={updateItem}\n            deleteItem={deleteItem}\n            key={todo.id}\n            todo={todo}\n          />\n        ))\n      ) : (\n        <p className=\"empty-message\">No todos</p>\n      )}\n      <CreateTodoWrapper>\n        {inputBoxVisibility ? (\n          <div className=\"container\">\n            <Input\n              size=\"small\"\n              value={name}\n              autoFocus\n              placeholder=\"Task..\"\n              onChange={({ target: { value } }) => setName(value)}\n              onPressEnter={createNewTodo}\n            />\n            <Button size=\"small\" onClick={() => setInputBoxVisibility(false)}>\n              Cancel\n            </Button>\n            <Button size=\"small\" onClick={createNewTodo}>\n              Create\n            </Button>\n          </div>\n        ) : (\n          <Button\n            size=\"small\"\n            onClick={() => setInputBoxVisibility(prev => !prev)}\n          >\n            New Todo\n            <Icon type=\"plus\" />\n          </Button>\n        )}\n      </CreateTodoWrapper>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  addItem,\n  updateItem,\n  deleteItem\n};\n\nexport default connect(null, mapDispatchToProps)(TodoList);\n","import React, { useState, useEffect } from \"react\";\nimport { Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { findFilesInPath } from \"../store/utils\";\n\nimport TitleBar from \"./TitleBar\";\nimport FolderList from \"./folder/FolderList\";\nimport TodoList from \"./todos/TodoList\";\n\nimport { setPath } from \"../store/actions\";\n\nconst getPath = params => (params.id ? params.id : \"/\");\n\nconst Window = ({ path, pathContent, match, setPath, history }) => {\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const path = getPath(match.params);\n    setPath(path);\n  }, [match]);\n\n  const navigate = id => () =>\n    history.push(id ? `/explorer/${id}` : \"/explorer\");\n\n  return (\n    <div>\n      <TitleBar navigate={navigate} path={path} />\n      <FolderList\n        navigate={navigate}\n        files={pathContent && pathContent.files}\n        path={path}\n      />\n      <Divider style={{ margin: \"12px 0\" }} />\n      <TodoList path={path} todos={pathContent && pathContent.todos} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ rootStructure, path }, ownProps) => {\n  const fileId = getPath(ownProps.match.params);\n  const fileInfo = rootStructure[fileId];\n  const pathContent = findFilesInPath(rootStructure, fileInfo);\n\n  return {\n    path,\n    pathContent\n  };\n};\n\nconst mapDispatchToProps = {\n  setPath\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Window);\n","import React from \"react\";\n\nconst Header = () => {\n  return <header>Explorer</header>;\n};\n\nexport default Header;\n","import React from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport Window from \"./components/Window\";\nimport Header from \"./components/layouts/Header\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"app\">\n        <Header />\n        <section>\n          <Switch>\n            <Route exact path=\"/explorer/:id\" component={Window} />\n            <Route exact path=\"/explorer/\" component={Window} />\n            <Route exact path=\"/\" render={() => <Redirect to=\"/explorer\" />} />\n          </Switch>\n        </section>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as constants from \"./constants\";\nimport { findFilesInPath, generatePath, addItem, deleteItem } from \"./utils\";\n\nconst initialState = {\n  path: [],\n  pathContent: {\n    files: [],\n    todos: []\n  },\n  rootStructure: {\n    test: {\n      name: \"test\",\n      type: \"folder\",\n      parent: null,\n      children: [\"child1\", \"child2\"]\n    },\n    test2: {\n      name: \"test2\",\n      type: \"folder\",\n      parent: null,\n      children: []\n    },\n    child1: {\n      name: \"child1\",\n      type: \"folder\",\n      parent: \"test\",\n      children: []\n    },\n    child2: {\n      name: \"task\",\n      type: \"todos\",\n      parent: \"test\",\n      status: \"none\"\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case constants.SET_PATH: {\n      const fileHierarchy = state.rootStructure;\n      const id = action.payload;\n      const fileInfo = fileHierarchy[id];\n\n      let path, pathContent;\n      if (action.payload === \"/\") {\n        path = [];\n        // pathContent = findFilesInPath(fileHierarchy);\n      } else if (fileInfo) {\n        path = generatePath(fileHierarchy, { ...fileInfo, id });\n        // pathContent = findFilesInPath(fileHierarchy, fileInfo);\n      }\n\n      return {\n        ...state,\n        path,\n        pathContent\n      };\n    }\n    case constants.ADD_ITEM: {\n      const updatedRootStructure = addItem(action.payload, {\n        ...state.rootStructure\n      });\n\n      return {\n        ...state,\n        rootStructure: updatedRootStructure\n      };\n    }\n    case constants.UPDATE_ITEM: {\n      const { fileId, key, value } = action.payload;\n      const updatedRootStructure = { ...state.rootStructure };\n      updatedRootStructure[fileId][key] = value;\n\n      return {\n        ...state,\n        rootStructure: updatedRootStructure\n      };\n    }\n    case constants.DELETE_ITEM: {\n      const fileId = action.payload;\n      const updatedRootStructure = deleteItem(fileId, {\n        ...state.rootStructure\n      });\n\n      return {\n        ...state,\n        rootStructure: updatedRootStructure\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\n\nimport reducer from \"./reducer\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\nimport \"antd/dist/antd.css\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}