{"version":3,"sources":["store/utils.js","components/TitleBar.js","utils.js","store/actions.js","store/constants.js","components/CustomButton.js","components/folder/Dropdown.js","components/folder/Folder.js","components/folder/CreateFolder.js","components/folder/FolderList.js","components/todos/Todo.js","components/todos/TodoList.js","components/Window.js","components/layouts/Header.js","App.js","serviceWorker.js","store/reducer.js","store/index.js","index.js"],"names":["generatePath","fileList","fileInfo","absolutePath","currentFile","push","name","id","parent","reverse","addItem","rootStructure","parentId","itemType","uuid","children","type","undefined","status","deleteItem","fileId","currentNode","parentNodeId","parentNode","filter","nodesToDelete","recursiveSearch","fileIds","forEach","file","length","copyItem","targetFileId","filesToCopy","copiedContent","recursiveCreateFiles","files","map","fileData","childNodes","StyledItem","styled","span","TitleBar","navigate","path","className","Item","onClick","item","key","getNodeId","data","payload","updateItem","StyledButton","Button","CustomButton","props","size","DropdownIcon","Icon","DropdownContent","div","Dropdown","renameFolder","handleDelete","dropdownRef","useRef","useState","showDropdown","setShowDropdown","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","stopPropagation","prevState","ref","title","onConfirm","placement","okText","cancelText","adjustNamePosition","css","StyledFolder","fileName","Folder","addFolderToSelection","renameFolderStatus","setRenameFolderStatus","setName","value","autoFocus","onChange","onKeyUp","keyCode","which","slice","parseFileName","checked","CreateFolderWrapper","CreateFolder","inputBoxVisibility","setInputBoxVisibility","folderName","setFolderName","createNewFolder","trim","placeholder","onPressEnter","prev","mapDispatchToProps","connect","selectedFolders","setSelectedFolders","copyStatus","setCopyStatus","action","folderId","message","success","todoSuccess","TodoWrapper","TodoList","todo","editTodoStatus","setEditTodoStatus","setTitle","prop","style","background","CreateTodoWrapper","todos","createNewTodo","Todo","getPath","params","setPath","ownProps","match","pathContent","Object","keys","findFilesInPath","history","margin","color","fontSize","orientation","StyledHeader","header","Header","App","basename","exact","component","Window","render","to","Boolean","window","location","hostname","initialState","id1","id2","id3","id4","reducer","state","node","updatedRootStructure","persistConfig","storage","persistedReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","redux","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faa0b102.chunk.js","sourcesContent":["import uuid from \"uuid/v1\";\n\nconst findFilesInPath = (fileList = {}, fileInfo) => {\n  let files = [],\n    todos = [];\n  if (!fileInfo) {\n    Object.keys(fileList).forEach(id => {\n      const file = fileList[id];\n      if (!file.parent) {\n        if (file.type === \"todos\") todos.push({ ...file, id });\n        else files.push({ ...file, id });\n      }\n    });\n  } else {\n    fileInfo.children.forEach(fileId => {\n      const file = fileList[fileId];\n      if (file.type === \"todos\") todos.push({ ...file, id: fileId });\n      else files.push({ ...file, id: fileId });\n    });\n  }\n  return { files, todos };\n};\n\nconst generatePath = (fileList, fileInfo) => {\n  const absolutePath = [];\n\n  let currentFile = fileInfo;\n  while (currentFile) {\n    absolutePath.push({ name: currentFile.name, id: currentFile.id });\n    const id = currentFile.parent;\n    currentFile = fileList[id];\n    if (currentFile) currentFile[\"id\"] = id;\n  }\n  const path = absolutePath.reverse();\n  return path;\n};\n\nconst addItem = ({ parentId, itemType, name }, rootStructure) => {\n  const id = uuid();\n  if (parentId) rootStructure[parentId].children.push(id);\n\n  rootStructure[id] = {\n    name,\n    type: itemType,\n    parent: parentId || null,\n    children: itemType === \"folder\" ? [] : undefined,\n    status: itemType === \"todos\" ? \"none\" : undefined\n  };\n  return rootStructure;\n};\n\nconst deleteItem = (fileId, rootStructure) => {\n  const currentNode = rootStructure[fileId];\n\n  const parentNodeId = currentNode.parent;\n  const parentNode = rootStructure[parentNodeId];\n  if (parentNodeId) {\n    // if not root level\n    parentNode.children = parentNode.children.filter(id => id !== fileId);\n    rootStructure[parentNodeId] = { ...parentNode };\n  }\n\n  const nodesToDelete = [fileId];\n\n  if (currentNode.type === \"folder\") {\n    const recursiveSearch = (fileIds = []) => {\n      nodesToDelete.push(...fileIds);\n      fileIds.forEach(fileId => {\n        const file = rootStructure[fileId];\n        if (file && file.children && file.children.length > 0) {\n          recursiveSearch(file.children);\n        }\n      });\n    };\n    recursiveSearch(currentNode.children);\n  }\n\n  nodesToDelete.forEach(id => delete rootStructure[id]);\n  return rootStructure;\n};\n\nconst copyItem = (targetFileId, filesToCopy, rootStructure) => {\n  const recursiveCreateFiles = (files, parentId) => {\n    return files.map(fileId => {\n      const fileData = { ...rootStructure[fileId] };\n      const id = uuid();\n      if (fileData.type === \"folder\") {\n        let childNodes = [];\n        if (fileData.children.length)\n          childNodes = recursiveCreateFiles(fileData.children, id);\n\n        rootStructure[id] = {\n          ...fileData,\n          parent: parentId,\n          children: [...childNodes]\n        };\n      } else {\n        rootStructure[id] = { ...fileData, id, parent: parentId };\n      }\n      return id;\n    });\n  };\n  const copiedContent = recursiveCreateFiles(filesToCopy, targetFileId);\n\n  if (targetFileId) rootStructure[targetFileId].children.push(...copiedContent);\n\n  return rootStructure;\n};\n\nexport { findFilesInPath, generatePath, addItem, deleteItem, copyItem };\n","import React from \"react\";\nimport { Breadcrumb, Icon } from \"antd\";\nimport styled from \"styled-components\";\n\nconst StyledItem = styled.span`\n  transition: 0.5s;\n  cursor: pointer;\n  font-size: .9rem;\n  padding: 0px 3px;\n  color: #2dadba;\n  border-radius: 2px;\n  line-height: 0;\n  &:hover {\n    background #2dadba;\n    color: white;\n  }\n`;\n\nconst TitleBar = ({ navigate, path = [] }) => {\n  return (\n    <div className=\"title-bar\">\n      <Breadcrumb>\n        <Breadcrumb.Item>\n          <StyledItem onClick={navigate()}>\n            <Icon type=\"home\" /> <span>Home</span>\n          </StyledItem>\n        </Breadcrumb.Item>\n        {path.map(item => (\n          <Breadcrumb.Item key={item.id}>\n            <StyledItem onClick={navigate(item.id)}>{item.name}</StyledItem>\n          </Breadcrumb.Item>\n        ))}\n      </Breadcrumb>\n    </div>\n  );\n};\n\nexport default TitleBar;\n","export const getNodeId = path =>\n  path.length >= 1 ? path[path.length - 1][\"id\"] : null;\n","import * as constants from \"./constants\";\n\nconst setPath = path => ({ type: constants.SET_PATH, payload: path });\n\nconst addItem = data => ({ type: constants.ADD_ITEM, payload: data });\n\nconst updateItem = data => ({ type: constants.UPDATE_ITEM, payload: data });\n\nconst deleteItem = fileId => ({ type: constants.DELETE_ITEM, payload: fileId });\n\nconst copyItem = data => ({ type: constants.COPY_ITEM, payload: data });\n\nexport { setPath, addItem, updateItem, deleteItem, copyItem };\n","const SET_PATH = \"SET_PATH\";\nconst ADD_ITEM = \"ADD_ITEM\";\nconst UPDATE_ITEM = \"UPDATE_ITEM\";\nconst DELETE_ITEM = \"DELETE_ITEM\";\nconst COPY_ITEM = \"COPY_ITEM\";\n\nexport { SET_PATH, ADD_ITEM, UPDATE_ITEM, DELETE_ITEM, COPY_ITEM };\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled(Button)`\n  font-size: 0.7rem;\n  margin: 0 2px;\n`;\n\nconst CustomButton = ({ children, ...props }) => (\n  <StyledButton size=\"small\" {...props}>\n    {children}\n  </StyledButton>\n);\n\nexport default CustomButton;\n","import React, { useState, useEffect, useRef, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon, Popconfirm } from \"antd\";\n\nconst DropdownIcon = styled(Icon)`\n  right: -2px;\n  top: 2px;\n  position: absolute;\n  font-size: 0.8rem;\n  z-index: 1;\n`;\n\nconst DropdownContent = styled.div`\n    display: flex;\n    width: 80%;\n    flex-direction: column;\n    padding: 2px;\n    font-size: .7rem;\n    position: absolute;\n    background: white;\n    border: 1px solid lightgrey;\n    border-radius: 3px;\n    right: 2px;\n    top: 15px;\n    & > * {\n      margin: 2px 1px;\n      padding: 1px;\n      &:hover{\n        background: lightgrey;\n      }\n    }\n  }\n`;\n\nconst Dropdown = ({ renameFolder, handleDelete }) => {\n  const dropdownRef = useRef(null);\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => document.removeEventListener(\"click\", handleClickOutside);\n  }, [showDropdown]);\n\n  const handleClickOutside = event => {\n    if (showDropdown) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target))\n        setShowDropdown(false);\n    }\n  };\n\n  const handleRename = () => {\n    setShowDropdown(false);\n    renameFolder();\n  };\n\n  const handleDeleteConfirm = () => {\n    handleDelete();\n    setShowDropdown(false);\n  };\n\n  const handleDropdownClick = event => {\n    event.stopPropagation();\n    setShowDropdown(prevState => !prevState);\n  };\n\n  return (\n    <Fragment>\n      <DropdownIcon type=\"more\" onClick={handleDropdownClick} />\n      {showDropdown && (\n        <DropdownContent\n          ref={dropdownRef}\n          onClick={event => event.stopPropagation()}\n        >\n          <span onClick={handleRename}>\n            <Icon type=\"edit\" />\n            Rename\n          </span>\n          <Popconfirm\n            title=\"Delete?\"\n            onConfirm={handleDeleteConfirm}\n            placement=\"right\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <span>\n              <Icon type=\"delete\" />\n              Delete\n            </span>\n          </Popconfirm>\n        </DropdownContent>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Icon, Checkbox } from \"antd\";\n\nimport Dropdown from \"./Dropdown\";\n\nconst adjustNamePosition = css`\n  position: relative;\n  bottom: 5px;\n  font-size: 0.7rem;\n`;\n\nconst StyledFolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 2px solid #424242;\n  height: 70px;\n  width: 70px;\n  padding: 0;\n  display: inline-block;\n  margin: 2px;\n  border-radius: 2px;\n  cursor: pointer;\n  transition: all 0.5s;\n  position: relative;\n  background: white;\n  &:hover {\n    background: #807f7f7a;\n  }\n  .icon-wrapper {\n    text-align: center;\n    .icon {\n      font-size: 3rem;\n    }\n  }\n  .filename {\n    flex: 1 0 auto;\n    padding: 0 2px;\n    text-align: center;\n    word-break: break-word;\n    font-size: 0.9rem;\n    line-height: 10px;\n    ${({ fileName }) => fileName.length > 10 && adjustNamePosition};\n  }\n  .rename-folder-input {\n    padding: 1px 2px;\n    position: relative;\n    bottom: 3px;\n    margin: 0;\n    background: #ececec;\n    border: none;\n    width: 100%;\n    font-size: 0.8rem;\n  }\n  .checkbox {\n    position: absolute;\n    top: 0px;\n    left: 2px;\n  }\n`;\n\nconst parseFileName = name =>\n  name.length > 18 ? name.slice(0, 18) + \"..\" : name;\n\nconst Folder = ({\n  file,\n  navigate,\n  updateItem,\n  deleteItem,\n  addFolderToSelection\n}) => {\n  const [renameFolderStatus, setRenameFolderStatus] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const renameFolder = () => {\n    setName(file.name);\n    setRenameFolderStatus(true);\n  };\n\n  const handleRename = ({ which: keyCode }) => {\n    if (keyCode === 13) {\n      updateItem({ fileId: file.id, key: \"name\", value: name });\n      setName(\"\");\n      setRenameFolderStatus(false);\n    } else if (keyCode === 27) {\n      setName(\"\");\n      setRenameFolderStatus(false);\n    }\n  };\n\n  const handleDelete = () => deleteItem(file.id);\n\n  const handleSelection = ({ target: { checked } }) =>\n    addFolderToSelection(checked ? \"add\" : \"remove\", file.id);\n  return (\n    <StyledFolder fileName={file.name} onClick={navigate(file.id)}>\n      <div className=\"icon-wrapper\">\n        <Icon className=\"icon\" type=\"folder\" />\n      </div>\n      {renameFolderStatus ? (\n        <input\n          className=\"rename-folder-input\"\n          type=\"text\"\n          value={name}\n          autoFocus\n          onClick={event => event.stopPropagation()}\n          onChange={({ target: { value } }) => setName(value)}\n          onKeyUp={handleRename}\n        />\n      ) : (\n        <div className=\"filename\">{parseFileName(file.name)}</div>\n      )}\n      <Checkbox\n        className=\"checkbox\"\n        onChange={handleSelection}\n        onClick={event => event.stopPropagation()}\n      />\n      <Dropdown handleDelete={handleDelete} renameFolder={renameFolder} />\n    </StyledFolder>\n  );\n};\n\nexport default Folder;\n","import React, { useState } from \"react\";\nimport { Icon, Input } from \"antd\";\nimport styled from \"styled-components\";\n\nimport { getNodeId } from \"../../utils\";\nimport CustomButton from \"../CustomButton\";\n\nconst CreateFolderWrapper = styled.div`\n  display: inline-block;\n  margin: 0 2px;\n  input {\n    font-size: 0.7rem;\n    margin: 0 2px;\n  }\n  .container {\n    display: flex;\n    align-items: center;\n    // background: gainsboro;\n    border-radius: 2px;\n    padding: 0px 10px;\n    input {\n      width: 100px;\n    }\n  }\n`;\n\nconst CreateFolder = ({ path, addItem }) => {\n  const [inputBoxVisibility, setInputBoxVisibility] = useState(false);\n  const [folderName, setFolderName] = useState(\"\");\n\n  const createNewFolder = () => {\n    const name = folderName.trim() || \"New Folder\";\n    addItem({\n      itemType: \"folder\",\n      name: name,\n      parentId: getNodeId(path)\n    });\n    setInputBoxVisibility(false);\n    setFolderName(\"\");\n  };\n\n  return (\n    <CreateFolderWrapper>\n      {inputBoxVisibility ? (\n        <div className=\"container\">\n          <Input\n            size=\"small\"\n            value={folderName}\n            autoFocus\n            placeholder=\"Folder Name\"\n            onChange={({ target: { value } }) => setFolderName(value)}\n            onPressEnter={createNewFolder}\n          />\n          <CustomButton onClick={() => setInputBoxVisibility(false)}>\n            Cancel\n          </CustomButton>\n          <CustomButton onClick={createNewFolder}>Create</CustomButton>\n        </div>\n      ) : (\n        <CustomButton\n          size=\"small\"\n          onClick={() => setInputBoxVisibility(prev => !prev)}\n        >\n          New Folder\n          <Icon type=\"folder-add\" />\n        </CustomButton>\n      )}\n    </CreateFolderWrapper>\n  );\n};\n\nexport default CreateFolder;\n","import React, { useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { message } from \"antd\";\n\nimport { getNodeId } from \"../../utils\";\nimport { addItem, updateItem, deleteItem, copyItem } from \"../../store/actions\";\nimport CustomButton from \"../CustomButton\";\nimport Folder from \"./Folder\";\nimport CreateFolder from \"./CreateFolder\";\n\nconst FolderList = ({\n  navigate,\n  files = [],\n  path,\n  addItem,\n  updateItem,\n  deleteItem,\n  copyItem\n}) => {\n  const [selectedFolders, setSelectedFolders] = useState([]);\n  const [copyStatus, setCopyStatus] = useState(\"initial\");\n\n  const addFolderToSelection = (action = \"add\", id) => {\n    if (action === \"add\") {\n      setSelectedFolders(prev => [...prev, id]);\n    } else {\n      setSelectedFolders(prev => prev.filter(folderId => folderId !== id));\n    }\n  };\n\n  const copyFolders = () => {\n    setCopyStatus(\"copied\");\n    message.success(`Copied ${selectedFolders.length} Folders.`);\n  };\n\n  const pasteFolders = () => {\n    copyItem({ files: selectedFolders, target: getNodeId(path) });\n    setSelectedFolders([]);\n    setCopyStatus(\"initial\");\n  };\n\n  return (\n    <Fragment>\n      <div className=\"folder-list\">\n        <div className=\"folders\">\n          {files.length > 0 ? (\n            files.map(file => (\n              <Folder\n                addFolderToSelection={addFolderToSelection}\n                updateItem={updateItem}\n                deleteItem={deleteItem}\n                key={file.id}\n                navigate={navigate}\n                file={file}\n              />\n            ))\n          ) : (\n            <p className=\"empty-message\">Empty folder</p>\n          )}\n        </div>\n        <div className=\"actions\">\n          {selectedFolders.length > 0 && (\n            <Fragment>\n              <span>\n                {selectedFolders.length} Folder(s){\" \"}\n                {copyStatus === \"copied\" ? \"copied\" : \"selected\"}.\n              </span>\n              {copyStatus === \"copied\" ? (\n                <CustomButton onClick={pasteFolders}>Paste</CustomButton>\n              ) : (\n                <CustomButton onClick={copyFolders}>Copy</CustomButton>\n              )}\n            </Fragment>\n          )}\n          <CreateFolder path={path} addItem={addItem} />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  addItem,\n  updateItem,\n  deleteItem,\n  copyItem\n};\n\nexport default connect(null, mapDispatchToProps)(FolderList);\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Icon, Divider, Popconfirm } from \"antd\";\n\nconst todoSuccess = css`\n  text-decoration: line-through;\n  color: grey;\n  font-style: italic;\n`;\n\nconst TodoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  border: 1px solid lightgrey;\n  margin: 3px;\n  padding: 0;\n  position: relative;\n  &:before {\n    content: \"\";\n    display: block;\n    height: 100%;\n    width: 5px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: ${({ status }) =>\n      status === \"done\" ? \"lightgreen\" : \"lightgrey\"};\n  }\n  .name {\n    padding: 3px 10px;\n    flex: 1 1 auto;\n    ${({ status }) => status === \"done\" && todoSuccess};\n  }\n  .status {\n    padding: 0 1px;\n    background: #ececec;\n    & > * {\n      margin: 2px;\n    }\n    .anticon {\n      transition: 0.5s;\n      border-radius: 50%;\n      padding: 4px;\n      &:hover {\n        background: lightgrey;\n      }\n    }\n  }\n  .edit-todo-input {\n    padding-left: 5px;\n    flex: 1 1 auto;\n    z-index: 1;\n    margin: 0;\n    background: #f1f1f1;\n    border: none;\n    font-size: 0.8rem;\n  }\n`;\n\nconst TodoList = ({ todo: { name, status, id }, updateItem, deleteItem }) => {\n  const [editTodoStatus, setEditTodoStatus] = useState(false);\n  const [title, setTitle] = useState(\"\");\n\n  const updateTodoStatus = () =>\n    updateItem({ fileId: id, key: \"status\", value: \"done\" });\n\n  const updateTodoName = ({ which: keyCode }) => {\n    if (keyCode === 13) {\n      updateItem({ fileId: id, key: \"name\", value: title });\n      setTitle(\"\");\n      setEditTodoStatus(false);\n    } else if (keyCode === 27) {\n      setTitle(\"\");\n      setEditTodoStatus(false);\n    }\n  };\n\n  const handleDelete = () => deleteItem(id);\n\n  return (\n    <TodoWrapper status={status}>\n      {editTodoStatus ? (\n        <input\n          className=\"edit-todo-input\"\n          type=\"text\"\n          autoFocus\n          value={title}\n          onClick={event => event.stopPropagation()}\n          onChange={({ target: { value } }) => setTitle(value)}\n          onKeyUp={updateTodoName}\n        />\n      ) : (\n        <span className=\"name\">{name}</span>\n      )}\n      <div className=\"status\">\n        <Icon\n          type=\"edit\"\n          onClick={() => {\n            setEditTodoStatus(prop => !prop);\n            setTitle(name);\n          }}\n        />\n        <Popconfirm\n          title=\"Delete?\"\n          onConfirm={handleDelete}\n          placement=\"top\"\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Icon type=\"delete\" />\n        </Popconfirm>\n        <Divider style={{ background: \"grey\" }} type=\"vertical\" />\n        <Icon type=\"check\" onClick={updateTodoStatus} />\n      </div>\n    </TodoWrapper>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon, Input } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport CustomButton from \"../CustomButton\";\nimport { addItem, updateItem, deleteItem } from \"../../store/actions\";\nimport Todo from \"./Todo\";\n\nconst CreateTodoWrapper = styled.div`\n  text-align: center;\n  margin: 10px auto;\n  input {\n    font-size: 0.7rem;\n    margin: 2px;\n  }\n  .container {\n    width: 300px;\n    margin: 2px auto;\n  }\n`;\n\nconst TodoList = ({ todos = [], path, addItem, updateItem, deleteItem }) => {\n  const [inputBoxVisibility, setInputBoxVisibility] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  const createNewTodo = () => {\n    if (!name.trim()) return;\n    addItem({\n      name,\n      itemType: \"todos\",\n      parentId: (path.length && path[path.length - 1][\"id\"]) || null\n    });\n    setInputBoxVisibility(false);\n    setName(\"\");\n  };\n\n  return (\n    <div className=\"todo-list\">\n      {todos.length > 0 ? (\n        todos.map(todo => (\n          <Todo\n            updateItem={updateItem}\n            deleteItem={deleteItem}\n            key={todo.id}\n            todo={todo}\n          />\n        ))\n      ) : (\n        <p className=\"empty-message\">No todos</p>\n      )}\n      <CreateTodoWrapper>\n        {inputBoxVisibility ? (\n          <div className=\"container\">\n            <Input\n              size=\"small\"\n              value={name}\n              autoFocus\n              placeholder=\"Task..\"\n              onChange={({ target: { value } }) => setName(value)}\n              onPressEnter={createNewTodo}\n            />\n            <CustomButton onClick={() => setInputBoxVisibility(false)}>\n              Cancel\n            </CustomButton>\n            <CustomButton onClick={createNewTodo}>Create</CustomButton>\n          </div>\n        ) : (\n          <CustomButton onClick={() => setInputBoxVisibility(prev => !prev)}>\n            New Todo\n            <Icon type=\"plus\" />\n          </CustomButton>\n        )}\n      </CreateTodoWrapper>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  addItem,\n  updateItem,\n  deleteItem\n};\n\nexport default connect(null, mapDispatchToProps)(TodoList);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { findFilesInPath } from \"../store/utils\";\n\nimport TitleBar from \"./TitleBar\";\nimport FolderList from \"./folder/FolderList\";\nimport TodoList from \"./todos/TodoList\";\n\nimport { setPath } from \"../store/actions\";\n\nconst getPath = params => (params.id ? params.id : \"/\");\n\nconst Window = ({ path, pathContent, match, setPath, history }) => {\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const path = getPath(match.params);\n    setPath(path);\n  }, [match]);\n\n  const navigate = id => () =>\n    history.push(id ? `/explorer/${id}` : \"/explorer\");\n\n  return (\n    <div>\n      <TitleBar navigate={navigate} path={path} />\n      {pathContent ? (\n        <Fragment>\n          <FolderList\n            navigate={navigate}\n            files={pathContent.files}\n            path={path}\n          />\n          <Divider\n            style={{ margin: \"12px 0\", color: \"grey\", fontSize: \".8rem\" }}\n            orientation=\"left\"\n          >\n            {`${pathContent.files.length} Folder(s), ${pathContent.todos.length} Todo(s)`}\n          </Divider>\n          <TodoList path={path} todos={pathContent.todos} />\n        </Fragment>\n      ) : (\n        <p className=\"empty-message\">Invalid path</p>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ rootStructure, path }, ownProps) => {\n  const fileId = getPath(ownProps.match.params);\n  const file = rootStructure[fileId];\n  const pathContent =\n    fileId !== \"/\" && !file ? null : findFilesInPath(rootStructure, file);\n\n  return {\n    path,\n    pathContent\n  };\n};\n\nconst mapDispatchToProps = {\n  setPath\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Window);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledHeader = styled.header`\n  font-weight: bold;\n  margin-bottom: 7px;\n  margin-top: 3px;\n  span {\n    font-size: 1.1rem;\n  }\n`;\n\nconst Header = () => (\n  <StyledHeader>\n    <span className=\"underline\">Explorer</span>\n  </StyledHeader>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport Window from \"./components/Window\";\nimport Header from \"./components/layouts/Header\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"app\">\n        <Header />\n        <section>\n          <Switch>\n            <Route exact path=\"/explorer/:id\" component={Window} />\n            <Route exact path=\"/explorer/\" component={Window} />\n            <Route exact path=\"/\" render={() => <Redirect to=\"/explorer\" />} />\n          </Switch>\n        </section>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as constants from \"./constants\";\nimport { generatePath, addItem, deleteItem, copyItem } from \"./utils\";\n\nconst initialState = {\n  path: [],\n  rootStructure: {\n    id1: {\n      name: \"Folder 1\",\n      type: \"folder\",\n      parent: null,\n      children: [\"id3\", \"id4\"]\n    },\n    id2: {\n      name: \"Folder 2\",\n      type: \"folder\",\n      parent: null,\n      children: []\n    },\n    id3: {\n      name: \"Sub Folder 1\",\n      type: \"folder\",\n      parent: \"id1\",\n      children: []\n    },\n    id4: {\n      name: \"Todo 1\",\n      type: \"todos\",\n      parent: \"id1\",\n      status: \"none\"\n    }\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case constants.SET_PATH: {\n      const fileId = action.payload;\n      const { rootStructure } = state;\n      const node = rootStructure[fileId];\n\n      let path;\n      if (action.payload === \"/\") path = [];\n      else if (node)\n        path = generatePath(rootStructure, { ...node, id: fileId });\n\n      return {\n        ...state,\n        path\n      };\n    }\n    case constants.ADD_ITEM: {\n      const updatedRootStructure = addItem(action.payload, {\n        ...state.rootStructure\n      });\n\n      return {\n        ...state,\n        rootStructure: updatedRootStructure\n      };\n    }\n    case constants.UPDATE_ITEM: {\n      const { fileId, key, value } = action.payload;\n      const updatedRootStructure = { ...state.rootStructure };\n      updatedRootStructure[fileId][key] = value;\n\n      return {\n        ...state,\n        rootStructure: updatedRootStructure\n      };\n    }\n    case constants.DELETE_ITEM: {\n      const fileId = action.payload;\n      const updatedRootStructure = deleteItem(fileId, {\n        ...state.rootStructure\n      });\n\n      return {\n        ...state,\n        rootStructure: updatedRootStructure\n      };\n    }\n    case constants.COPY_ITEM: {\n      const { files, target } = action.payload;\n      const updatedRootStructure = copyItem(target, files, {\n        ...state.rootStructure\n      });\n      return {\n        ...state,\n        rootStructure: updatedRootStructure\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport reducer from \"./reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport default () => {\n  const store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\nimport \"antd/dist/antd.css\";\n\nimport redux from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst { store, persistor } = redux();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}